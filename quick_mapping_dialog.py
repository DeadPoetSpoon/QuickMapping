# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QuickMappingDialog
                                 A QGIS plugin
 Quick Mapping
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2020-09-07
        git sha              : $Format:%H$
        copyright            : (C) 2020 by DeadPoetSpoon
        email                : 1149097040@qq.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.core import *

# This loads your .ui file so that PyQt can populate your plugin
# with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'quick_mapping_dialog_base.ui'))


class QuickMappingDialog(QtWidgets.QDialog, FORM_CLASS):
    """Main Dialog"""
    def __init__(self, iface, parent=None):
        """Constructor."""
        super(QuickMappingDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.iface = iface
        # connet
        self.pb_loadmap.clicked.connect(lambda: self.getGeojson(self.le_search.text()))
    def getGeojson(self, areaCode: str):
        """Get GeoJson from https://geo.datav.aliyun.com/areas_v2/bound/"""
        dataurl = 'https://geo.datav.aliyun.com/areas_v2/bound/'+ \
                  areaCode+'_full.json'
        self.iface.newProject(True)
        layer = self.iface.addVectorLayer(dataurl,areaCode,"ogr")
        self.textBrowser.setText(layer.sourceName())
